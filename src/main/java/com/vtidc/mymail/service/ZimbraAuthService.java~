package com.vtidc.mymail.service;

import com.vtidc.mymail.dto.SearchAccountRequest;
import com.vtidc.mymail.dto.zimbra.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ws.client.core.WebServiceTemplate;

@Service
public class ZimbraAuthService {

    @Autowired
    private WebServiceTemplate webServiceTemplate;

    private static final String ZIMBRA_ADMIN_URL = "https://mail.example.com:7071/service/admin/soap";

    public AuthResponse authenticateAndGetAccount(String username, String password) {

        AuthRequest authRequest = new AuthRequest(username, password);

        return (AuthResponse) webServiceTemplate.
                marshalSendAndReceive(ZIMBRA_ADMIN_URL, authRequest);
    }

    public GetAllAccountsResponse getAllAccounts() {

        GetAllAccountsRequest req = new GetAllAccountsRequest(new GetAllAccountsRequest.Domain("name", "example.com"));

        GetAllAccountsResponse response = (GetAllAccountsResponse) webServiceTemplate
                .marshalSendAndReceive(ZIMBRA_ADMIN_URL, req);

        // Lặp qua tất cả các account và gán displayName từ attrs
        if (response != null && response.getAccount() != null) {
            for (Account account : response.getAccount()) {
                if (account.getAttrs() != null) {
                    // Tìm giá trị displayName từ attrs
                    for (Attr attr : account.getAttrs()) {
                        if ("displayName".equals(attr.getName())) {
                            account.setDisplayName(attr.getValue());
                            account.setAttrs(null);
                            break;
                        }
                    }
                    account.setAttrs(null);
                }
            }
        }

        return response;
    }

    public SearchDirectoryResponse searchAccounts(SearchAccountRequest searchAccountRequest) {

        SearchDirectoryRequest req = new SearchDirectoryRequest();
        req.setOffset(searchAccountRequest.getPage() * searchAccountRequest.getSize());
        req.setLimit(searchAccountRequest.getSize());
        req.setApplyCos(false);
        req.setApplyConfig(false);
        req.setAttrs("displayName,zimbraId,cn,uid,zimbraCOSId,zimbraAccountStatus,zimbraLastLogonTimestamp,description,zimbraIsSystemAccount,zimbraIsDelegatedAdminAccount,zimbraIsAdminAccount,zimbraMailStatus,zimbraIsAdminGroup");
        req.setTypes("accounts");

        StringBuilder query = new StringBuilder();
        query.append("(description=type:")
                .append(searchAccountRequest.getType())
                .append(";*)(!(zimbraIsAdminAccount=TRUE))");

        if (searchAccountRequest.getTagId() != null) {
            query.append("(description=*tagId:")
                    .append(searchAccountRequest.getTagId())
                    .append(";)");
        }
        if (searchAccountRequest.getKeyword() != null && !searchAccountRequest.getKeyword().isBlank()) {
            query.append("(|(mail=*")
                    .append(searchAccountRequest.getKeyword())
                    .append("*)(displayName=*")
                    .append(searchAccountRequest.getKeyword())
                    .append("*))");
        }
        req.setQuery(query.toString());

        if (searchAccountRequest.getSortBy() != null && searchAccountRequest.getSortAscending() != null
        && !searchAccountRequest.getSortBy().isBlank() && !searchAccountRequest.getSortAscending().isBlank()) {
            req.setSortBy(searchAccountRequest.getSortBy());
            req.setSortAscending(searchAccountRequest.getSortAscending());
        }

        SearchDirectoryResponse response = (SearchDirectoryResponse) webServiceTemplate.marshalSendAndReceive(ZIMBRA_ADMIN_URL, req);
        if (response != null && response.getAccounts() != null) {
            for (Account account : response.getAccounts()) {
                if (account.getAttrs() != null) {
                    // Tìm giá trị displayName từ attrs
                    for (Attr attr : account.getAttrs()) {
                        if ("displayName".equals(attr.getName())) {
                            account.setDisplayName(attr.getValue());
                            account.setAttrs(null);
                            break;
                        }
                    }
                    account.setAttrs(null);
                }
            }
        }
        return response;
    }



}
